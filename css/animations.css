/* ==========================================================================
   ANIMATIONS.CSS - Sistema de Animações Futurista
   Microanimações e transições suaves inspiradas em Glassmorphism/Neumorphism
   ========================================================================== */

/* === KEYFRAMES FUTURISTAS === */

/* Animações de entrada com efeitos glassmorphism */
@keyframes fadeInGlass {
    from {
        opacity: 0;
        backdrop-filter: blur(0px);
        transform: scale(0.95);
    }
    to {
        opacity: 1;
        backdrop-filter: var(--blur-md);
        transform: scale(1);
    }
}

@keyframes slideInUpGlass {
    from {
        transform: translateY(var(--space-8)) scale(0.95);
        opacity: 0;
        backdrop-filter: blur(0px);
    }
    to {
        transform: translateY(0) scale(1);
        opacity: 1;
        backdrop-filter: var(--blur-md);
    }
}

@keyframes slideInDownGlass {
    from {
        transform: translateY(calc(-1 * var(--space-8))) scale(0.95);
        opacity: 0;
        backdrop-filter: blur(0px);
    }
    to {
        transform: translateY(0) scale(1);
        opacity: 1;
        backdrop-filter: var(--blur-md);
    }
}

@keyframes slideInLeftGlass {
    from {
        transform: translateX(calc(-1 * var(--space-8))) scale(0.95);
        opacity: 0;
        backdrop-filter: blur(0px);
    }
    to {
        transform: translateX(0) scale(1);
        opacity: 1;
        backdrop-filter: var(--blur-md);
    }
}

@keyframes slideInRightGlass {
    from {
        transform: translateX(var(--space-8)) scale(0.95);
        opacity: 0;
        backdrop-filter: blur(0px);
    }
    to {
        transform: translateX(0) scale(1);
        opacity: 1;
        backdrop-filter: var(--blur-md);
    }
}

@keyframes scaleInGlow {
    from {
        transform: scale(0.8);
        opacity: 0;
    }
    to {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes bounceInFuturistic {
    0% {
        transform: scale(0.3) rotate(-5deg);
        opacity: 0;
        filter: blur(4px);
    }
    50% {
        transform: scale(1.05) rotate(2deg);
        opacity: 0.8;
        filter: blur(1px);
    }
    70% {
        transform: scale(0.95) rotate(-1deg);
        opacity: 0.9;
        filter: blur(0.5px);
    }
    100% {
        transform: scale(1) rotate(0deg);
        opacity: 1;
        filter: blur(0px);
    }
}

/* Animações de saída com efeitos glassmorphism */
@keyframes fadeOutGlass {
    from {
        opacity: 1;
        backdrop-filter: var(--blur-md);
        transform: scale(1);
    }
    to {
        opacity: 0;
        backdrop-filter: blur(0px);
        transform: scale(0.95);
    }
}

@keyframes slideOutUpGlass {
    from {
        transform: translateY(0) scale(1);
        opacity: 1;
        backdrop-filter: var(--blur-md);
    }
    to {
        transform: translateY(calc(-1 * var(--space-8))) scale(0.95);
        opacity: 0;
        backdrop-filter: blur(0px);
    }
}

@keyframes slideOutDownGlass {
    from {
        transform: translateY(0) scale(1);
        opacity: 1;
        backdrop-filter: var(--blur-md);
    }
    to {
        transform: translateY(var(--space-8)) scale(0.95);
        opacity: 0;
        backdrop-filter: blur(0px);
    }
}

@keyframes scaleOutGlow {
    from {
        transform: scale(1);
        opacity: 1;
    }
    to {
        transform: scale(0.8);
        opacity: 0;
    }
}

/* Animações especiais futuristas */
@keyframes glowPulse {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0.8;
    }
}

@keyframes shimmerEffect {
    0% {
        background-position: -200% center;
    }
    100% {
        background-position: 200% center;
    }
}

@keyframes floatAnimation {
    0%, 100% {
        transform: translateY(0px);
    }
    50% {
        transform: translateY(-6px);
    }
}

@keyframes rotateGlow {
    0% {
        transform: rotate(0deg);
        filter: hue-rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
        filter: hue-rotate(360deg);
    }
}

/* === CLASSES DE ANIMAÇÃO FUTURISTAS === */

/* Animações de entrada */
.animate-fade-in {
    animation: fadeInGlass var(--transition-slow) var(--ease-out) forwards;
}

.animate-slide-in-up {
    animation: slideInUpGlass var(--transition-slow) var(--ease-out) forwards;
}

.animate-slide-in-down {
    animation: slideInDownGlass var(--transition-slow) var(--ease-out) forwards;
}

.animate-slide-in-left {
    animation: slideInLeftGlass var(--transition-slow) var(--ease-out) forwards;
}

.animate-slide-in-right {
    animation: slideInRightGlass var(--transition-slow) var(--ease-out) forwards;
}

.animate-scale-in {
    animation: scaleInGlow var(--transition-normal) var(--ease-out) forwards;
}

.animate-bounce-in {
    animation: bounceInFuturistic var(--transition-bounce) var(--ease-bounce) forwards;
}

/* Animações de saída */
.animate-fade-out {
    animation: fadeOutGlass var(--transition-fast) var(--ease-in) forwards;
}

.animate-slide-out-up {
    animation: slideOutUpGlass var(--transition-normal) var(--ease-in) forwards;
}

.animate-slide-out-down {
    animation: slideOutDownGlass var(--transition-normal) var(--ease-in) forwards;
}

.animate-scale-out {
    animation: scaleOutGlow var(--transition-fast) var(--ease-in) forwards;
}

/* Animações especiais */
.animate-glow-pulse {
    animation: glowPulse 2s var(--ease-in-out) infinite;
}

.animate-shimmer {
    background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.2),
        transparent
    );
    background-size: 200% 100%;
    animation: shimmerEffect 2s var(--ease-in-out) infinite;
}

.animate-float {
    animation: floatAnimation 3s var(--ease-in-out) infinite;
}

.animate-rotate-glow {
    animation: rotateGlow 4s linear infinite;
}

/* Microanimações para interatividade */
.micro-bounce {
    transition: transform var(--transition-fast) var(--ease-bounce);
}

.micro-bounce:hover {
    transform: translateY(-2px) scale(1.02);
}

.micro-glow {
    transition: all var(--transition-normal) var(--ease-out);
}

.micro-glow:hover {
    transform: translateY(-1px);
}

.micro-scale {
    transition: transform var(--transition-fast) var(--ease-out);
}

.micro-scale:hover {
    transform: scale(1.05);
}

.micro-slide {
    transition: transform var(--transition-normal) var(--ease-out);
}

.micro-slide:hover {
    transform: translateX(var(--space-2));
}

/* === TRANSIÇÕES SUAVES FUTURISTAS === */
.smooth-transition {
    transition: all var(--transition-normal) var(--ease-out);
}

.smooth-transition-fast {
    transition: all var(--transition-fast) var(--ease-out);
}

.smooth-transition-slow {
    transition: all var(--transition-slow) var(--ease-out);
}

.smooth-transition-bounce {
    transition: all var(--transition-normal) var(--ease-bounce);
}

/* === ANIMAÇÕES ESPECÍFICAS PARA TELAS === */
.screen {
    transition: 
        opacity var(--transition-slow) var(--ease-out),
        transform var(--transition-slow) var(--ease-out),
        backdrop-filter var(--transition-slow) var(--ease-out);
    backdrop-filter: var(--blur-md);
}

.screen:not(.active) {
    opacity: 0;
    transform: translateY(var(--space-6)) scale(0.98);
    pointer-events: none;
    backdrop-filter: blur(0px);
}

.screen.active {
    opacity: 1;
    transform: translateY(0) scale(1);
    pointer-events: auto;
    backdrop-filter: var(--blur-md);
}

/* Efeito de entrada para telas */
.screen.entering {
    animation: slideInUpGlass var(--transition-slow) var(--ease-out) forwards;
}

.screen.exiting {
    animation: slideOutDownGlass var(--transition-normal) var(--ease-in) forwards;
}

/* === ANIMAÇÕES PARA BOTÕES FUTURISTAS === */
.btn, button {
    transition: all var(--transition-normal) var(--ease-out);
    position: relative;
    overflow: hidden;
}

.btn:hover, button:hover {
    transform: translateY(-2px) scale(1.02);
}

.btn:active, button:active {
    transform: translateY(-1px) scale(0.98);
    transition: all var(--transition-fast) var(--ease-in);
}

/* Efeito ripple futurista para botões */
.btn::before, button::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: radial-gradient(
        circle,
        rgba(0, 212, 255, 0.4) 0%,
        rgba(124, 58, 237, 0.2) 50%,
        transparent 70%
    );
    transform: translate(-50%, -50%);
    transition: 
        width var(--transition-slow) var(--ease-out),
        height var(--transition-slow) var(--ease-out),
        opacity var(--transition-slow) var(--ease-out);
    opacity: 0;
}

.btn:active::before, button:active::before {
    width: 300px;
    height: 300px;
    opacity: 1;
}

/* Efeito shimmer para botões primários */
.btn-primary::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.3),
        transparent
    );
    transition: left var(--transition-slow) var(--ease-out);
}

.btn-primary:hover::after {
    left: 100%;
}

/* Estados especiais para botões */
.btn.loading {
    animation: glowPulse 1.5s var(--ease-in-out) infinite;
    pointer-events: none;
}

.btn.success {
    animation: bounceInFuturistic var(--transition-bounce) var(--ease-bounce);
    background: var(--gradient-success) !important;
}

.btn.error {
    animation: scaleInGlow var(--transition-normal) var(--ease-out);
    background: var(--gradient-danger) !important;
}

/* Animações para cards */
.category-card, .login-box, .lobby-box {
    transition: all 0.3s ease;
}

.category-card:hover {
    transform: translateY(-5px) scale(1.02);
}

.category-card.selected {
    animation: bounceIn 0.6s ease-out;
    transform: scale(1.05);
}

/* Animações para inputs */
input, select, textarea {
    transition: all 0.2s ease;
}

input:focus, select:focus, textarea:focus {
    transform: scale(1.02);
}

/* Animações para lista de jogadores */
.player-item {
    animation: slideInLeft 0.5s ease-out;
    transition: all 0.3s ease;
}

.player-item:hover {
    transform: translateX(5px);
    background: rgba(255, 255, 255, 0.1);
}

/* Animações para perguntas */
.question-container {
    animation: fadeIn 0.6s ease-out;
}

.answer-btn {
    transition: all 0.2s ease;
    animation: slideInUp 0.4s ease-out;
}

.answer-btn:nth-child(1) { animation-delay: 0.1s; }
.answer-btn:nth-child(2) { animation-delay: 0.2s; }
.answer-btn:nth-child(3) { animation-delay: 0.3s; }
.answer-btn:nth-child(4) { animation-delay: 0.4s; }

.answer-btn:hover {
    transform: translateX(10px);
}

.answer-btn.correct {
    animation: bounceIn 0.6s ease-out;
    background-color: var(--green-correct);
}

.answer-btn.incorrect {
    animation: scaleOut 0.4s ease-in;
    background-color: var(--red-incorrect);
}

/* Animações para notificações */
.notification {
    animation: slideInRight 0.4s ease-out;
    transition: all 0.3s ease;
}

.notification.removing {
    animation: slideOutUp 0.3s ease-in;
}

/* Animações de loading removidas - usar loading.css */

/* Animações para progresso */
.progress-bar {
    transition: width 0.5s ease;
}

.progress-bar::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: transparent;
    animation: none;
}

@keyframes shimmer {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}

/* Animações para modo escuro */
.dark-mode-transition {
    transition: background-color 0.4s ease, color 0.4s ease, border-color 0.4s ease;
}

/* Animações responsivas */
@media (max-width: 768px) {
    .animate-slide-in-up,
    .animate-slide-in-down,
    .animate-slide-in-left,
    .animate-slide-in-right {
        animation-duration: 0.4s;
    }
    
    .btn:hover, button:hover {
        transform: none;
    }
    
    .category-card:hover {
        transform: none;
    }
}

/* Animações para acessibilidade */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}

/* Utilitários de animação */
.no-animation {
    animation: none !important;
    transition: none !important;
}

.delay-1 { animation-delay: 0.1s; }
.delay-2 { animation-delay: 0.2s; }
.delay-3 { animation-delay: 0.3s; }
.delay-4 { animation-delay: 0.4s; }
.delay-5 { animation-delay: 0.5s; }

.duration-fast { animation-duration: 0.2s; }
.duration-normal { animation-duration: 0.4s; }
.duration-slow { animation-duration: 0.8s; }

/* ==========================================================================
   ANIMATIONS.CSS - Animações reutilizáveis
   ========================================================================== */

/* --- ANIMAÇÕES DE TRANSIÇÃO DE TELA --- */
.fade-in {
    animation: fadeIn var(--transition-slow) ease-out forwards;
}

.fade-out {
    animation: fadeOut var(--transition-slow) ease-in forwards;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
}

/* Box shadow apenas no hover para desktop */
@media (min-width: 1024px) {
    .micro-glow:hover {
        box-shadow: var(--shadow-lg), var(--glow-primary);
    }
    
    .btn:hover, button:hover {
        box-shadow: var(--shadow-lg), var(--glow-primary);
    }
    
    .category-card:hover {
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    }
    
    .category-card.selected {
        box-shadow: 0 0 20px rgba(74, 144, 226, 0.5);
    }
    
    input:focus, select:focus, textarea:focus {
        box-shadow: 0 0 10px rgba(74, 144, 226, 0.3);
    }
}

/* Keyframes com box shadow apenas para desktop */
@media (min-width: 1024px) {
    @keyframes scaleInGlowDesktop {
        from {
            transform: scale(0.8);
            opacity: 0;
            box-shadow: none;
        }
        to {
            transform: scale(1);
            opacity: 1;
            box-shadow: var(--shadow-lg), var(--glow-primary);
        }
    }
    
    @keyframes scaleOutGlowDesktop {
        from {
            transform: scale(1);
            opacity: 1;
            box-shadow: var(--shadow-lg), var(--glow-primary);
        }
        to {
            transform: scale(0.8);
            opacity: 0;
            box-shadow: none;
        }
    }
    
    @keyframes glowPulseDesktop {
        0%, 100% {
            box-shadow: var(--shadow-md), var(--glow-primary);
        }
        50% {
            box-shadow: var(--shadow-xl), 0 0 30px rgba(0, 212, 255, 0.6);
        }
    }
    
    .animate-scale-in {
        animation: scaleInGlowDesktop var(--transition-normal) var(--ease-out) forwards;
    }
    
    .animate-scale-out {
        animation: scaleOutGlowDesktop var(--transition-fast) var(--ease-in) forwards;
    }
    
    .animate-glow-pulse {
        animation: glowPulseDesktop 2s var(--ease-in-out) infinite;
    }
    
    .btn.loading {
        animation: glowPulseDesktop 1.5s var(--ease-in-out) infinite;
    }
    
    .btn.error {
        animation: scaleInGlowDesktop var(--transition-normal) var(--ease-out);
    }
}